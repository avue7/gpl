//Declaration of window setup
int window_width = 500;
int window_height = 500;
int window_x = 500;
int window_y = 300;
string window_title = "SURVIVE OR DIE";
int animation_speed = 88;

//Declaration of global variables
int move_x = 40;
int move_y = 40;
int score = 0;
int lives = 5;
int max_bullets = 5;
int bullet_move_y = 5;
int i;

circle bullets[max_bullets];

//Spiders 1-5
int spider_move_x = 5;
int spider_move_y = 5;

int spider1_move_x = 5;
int spider1_move_y = 5;

int spider2_move_x = 5;
int spider2_move_y = 5;

int spider3_move_x = 5;
int spider3_move_y = 5;

int spider4_move_x = 5;
int spider4_move_y = 5;

//Declaration of animation block forward
forward animation bullet_animation(circle cur_bullet);
forward animation spider_animation(circle spider);    //parameters are like reference
forward animation spider1_animation(circle spider1);
forward animation spider2_animation(circle spider2);
forward animation spider3_animation(circle spider3);
forward animation spider4_animation(circle spider4);

//Declare a textbox for keeping scores
textbox score_board(x = 5, y = window_height - 15, text = "SCORE: " + score);

//Delare a textbox for keeping track of lives
textbox lives_left(x = 5, y = window_height - 35, text = "Lives Left: " + lives);

//Create a triangle to represent a human
triangle human(x = window_width/2, y = 20, size = 20);

//Create circles for spiders
circle cir_spider(x = random(window_width), y = random(window_height), radius = 10, animation_block = spider_animation);

circle cir_spider1(x = random(window_width), y = random(window_height), radius = 10, animation_block = spider1_animation);

circle cir_spider2(x = random(window_width), y = random(window_height), radius = 10, animation_block = spider2_animation);

circle cir_spider3(x = random(window_width), y = random(window_height), radius = 10, animation_block = spider3_animation);

circle cir_spider4(x = random(window_width), y = random(window_height), radius = 10, animation_block = spider4_animation);

initialization
{
  //Initialize bullets and make them invisible until shot
  for( i = 0; i < max_bullets; i++)
  {
    bullets[i].radius = 3;
    bullets[i].visible = false;
    bullets[i].animation_block = bullet_animation;
  }
}    

//ANIMATION BLOCK STARTS HERE

animation spider_animation(circle spider)
{    
  if (human.visible && spider.visible)
  {
    if (spider touches human)
    { 
      human.visible = false; 
      lives--;
      lives_left.text = "lives: " + lives;
      if (lives <= 0)
      {
        exit(0);
      }      
    }
  }
  if (spider.x < 0 || spider.x > window_width - 10)
    spider_move_x = -spider_move_x;
  if (spider.y < 0 || spider.y > window_height - 10)
    spider_move_y = -spider_move_y;
  
  //This is what makes the animation work
  spider.x += spider_move_x;
  spider.y += spider_move_y;  
}

animation spider1_animation(circle spider1)
{    
  if (spider1.x < 0 || spider1.x > window_width - 10)
    spider1_move_x = -spider1_move_x;
  if (spider1.y < 0 || spider1.y > window_height - 10)
    spider1_move_y = -spider1_move_y;
  if (human.visible && spider1.visible)
  {
    if (spider1 touches human)
    { 
      human.visible = false; 
      lives--;
      lives_left.text = "lives: " + lives;
      if (lives <= 0)
      {
        exit(0);
      }
    }
  }
  spider1.x += spider1_move_x;
  spider1.y += spider1_move_y;  
}

animation spider2_animation(circle spider2)
{    
  if (spider2.x < 0 || spider2.x > window_width - 10)
    spider2_move_x = -spider2_move_x;
  if (spider2.y < 0 || spider2.y > window_height - 10)
    spider2_move_y = -spider2_move_y;
  
  if (human.visible && spider2.visible)
  {
    if (spider2 touches human)
    { 
      human.visible = false; 
      lives--;
      lives_left.text = "lives: " + lives;
      if (lives <= 0)
      {
        exit(0);
      }
    }
  }
  spider2.x += spider2_move_x;
  spider2.y += spider2_move_y;  
}
    
animation spider3_animation(circle spider3)
{    
  if (spider3.x < 0 || spider3.x > window_width - 10)
    spider3_move_x = -spider3_move_x;
  if (spider3.y < 0 || spider3.y > window_height - 10)
    spider3_move_y = -spider3_move_y;
  if (human.visible && spider3.visible)
  {
    if (spider3 touches human)
    { 
      human.visible = false; 
      lives--;
      lives_left.text = "lives: " + lives;
      if (lives <= 0)
      {
        exit(0);
      }
    }
  }
  spider3.x += spider3_move_x;
  spider3.y += spider3_move_y;  
}

animation spider4_animation(circle spider4)
{    
  if (spider4.x < 0 || spider4.x > window_width - 10)
    spider4_move_x = -spider4_move_x;
  if (spider4.y < 0 || spider4.y > window_height - 10)
    spider4_move_y = -spider4_move_y;
  if (human.visible && spider4.visible)
  {
    if (spider4 touches human)
    { 
      human.visible = false; 
      lives--;
      lives_left.text = "lives: " + lives;
      if (lives <= 0)
      {
        exit(0);
      }
    }
  }
  spider4.x += spider4_move_x;
  spider4.y += spider4_move_y;  
}

//If bullet becomes available and if bullet touches spider
// set their visibility to false
animation bullet_animation(circle cur_bullet)
{
  //If human is not visible, get rid of bullets
  if (human.visible == false)
  {
    // If bullets shot right before human disappeared then
    // Let it travel and check if it touches spiders
    if (cur_bullet touches cir_spider)
    {
      cir_spider.visible = false;  //If bullet touches spider both disappears
      cur_bullet.visible = false;
      if (cir_spider.visible == false)
      {
        score += 10;
        score_board.text = "SCORE: " + score;
      }
    }
    if (cur_bullet touches cir_spider1)
    {
      score += 10;
      cir_spider.visible = false;
      cur_bullet.visible = false;
      if (cir_spider.visible == false)
      {
        score += 10;
        score_board.text = "SCORE: " + score;
      }
    }
    if (cur_bullet touches cir_spider2)
    {
      cir_spider2.visible = false;
      cur_bullet.visible = false;
      if (cir_spider.visible == false)
      {
        score += 10;
        score_board.text = "SCORE: " + score;
      }
    }
    if (cur_bullet touches cir_spider3)
    {
      cir_spider3.visible = false;
      cur_bullet.visible = false;
      if (cir_spider.visible == false)
      {
        score += 10;
        score_board.text = "SCORE: " + score;
      }
    }
    if (cur_bullet touches cir_spider4)
    {
      cir_spider4.visible = false;
      cur_bullet.visible = false;
      if (cir_spider.visible == false)
      {
        score += 10;
        score_board.text = "SCORE: " + score;
      }
    }
    cur_bullet.y += bullet_move_y; //Then let it keep moving on the plane

    //Make all other bullets not count after human disappears 
    if (cur_bullet.y >= window_height)
    {
      for (i = 0; i < max_bullets; i++)
      {
        bullets[i].visible = false;
      }
    } 
  }

  //Only when human is visible can the weapon be used
  if (human.visible)
  {
    if (cur_bullet.visible)
    {
     if (cur_bullet touches cir_spider)
     {
       cir_spider.visible = false;  //If bullet touches spider both disappears
       cur_bullet.visible = false;
       if (cir_spider.visible == false)
       {
         score += 10;
         score_board.text = "SCORE: " + score;
       }
     }
     if (cur_bullet touches cir_spider1)
     {
       score += 10;
       cir_spider.visible = false;
       cur_bullet.visible = false;
       if (cir_spider.visible == false)
       {
         score += 10;
         score_board.text = "SCORE: " + score;
       }
     }
     if (cur_bullet touches cir_spider2)
     {
       cir_spider2.visible = false;
       cur_bullet.visible = false;
       if (cir_spider.visible == false)
       {
         score += 10;
         score_board.text = "SCORE: " + score;
       }
     }
     if (cur_bullet touches cir_spider3)
     {
       cir_spider3.visible = false;
       cur_bullet.visible = false;
       if (cir_spider.visible == false)
       {
         score += 10;
         score_board.text = "SCORE: " + score;
       }
     }
     if (cur_bullet touches cir_spider4)
     {
       cir_spider4.visible = false;
       cur_bullet.visible = false;
       if (cir_spider.visible == false)
       {
         score += 10;
         score_board.text = "SCORE: " + score;
       }
     }
     cur_bullet.y += bullet_move_y;  
    }
  }
}

//Event Handler
on leftarrow
{
  if (human.x > 10)
    human.x -= move_x;
}
on rightarrow
{
  if (human.x < window_width - 10)
    human.x += move_x;
}
on downarrow
{
  if (human.y > 10)
    human.y -= move_y;
}
on uparrow
{
  if (human.y < window_height - 10)
    human.y += move_y;
}
//For each bullet if it is invisible make them visible
//Make them shoot from the human
on space
{
  if (human.visible) //Provide ammo only if human is visible
  { 
    for (i = 0; i < max_bullets; i++)
    {
      if (bullets[i].visible == false)
      {
        bullets[i].visible = true;
        bullets[i].x = human.x + human.w/2;
        bullets[i].y = human.y + 1; 
        i = max_bullets + 1;
      }
    }
  }
}
//Get human back on the board after he dies and if have lives left
on f1
{
  if (lives != 0)
  {
    human.x = window_width / 2;
    human.y = 20;
    human.visible = true;
  }
}

